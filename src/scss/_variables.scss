@import url("https://fonts.googleapis.com/css?family=Raleway");
@import url("https://use.typekit.net/olo2rze.css");
// Font Family
$font-family: "Raleway", sans-serif;
$header-font: "Zeitung", sans-serif;

$base-line-height: 1;

$default-padding: 0.25em 0.75em;

$default-margin: 0.25em 0.5em;

$default-radius: 0.5em;

$full-height: 100vh;

$base-font-size: 0.75em;

$elements: (
  headings: [ h1 h2 h3 h4 h5 h6 ]
);

$text: h1, h2, h3, h4, h5, h6, p;

$colors: (
  secondary: #95575c,
  muted: #9a9da4,
  bg: #1c2833,
  info: #413840,
  primary: #192050,
  dark: #090b13,
  light: #f6f7f7,
  white: #fff
);

$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1140px
) !default;

$mobile-width: 640px;
$tablet-width: 768px;
$desktop-width: 1024px;

@mixin mobile {
  @media (max-width: #{$mobile-width}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

$defaults: (
  padding: 0.25em 0.75em,
  margin: 0.5em 0.25em,
  border-radius: 0.5em,
  border-width: 1.5px,
  border-color: dark,
  lighten: 15%
);

%flex-row {
  display: flex;
  flex-direction: row;
}

%padding {
  padding: 1em;
}

%border-radius {
  border-radius: map-get($defaults, border-radius);
}

%container-fluid {
  @extend %padding;
}

@function prefix($property, $prefixes: (webkit moz o ms)) {
  $vendor-prefixed-properties: transform background-clip background-size;
  $result: ();
  @each $prefix in $prefixes {
    @if index($vendor-prefixed-properties, $property) {
      $property: -#{$prefix}-#{$property};
    }
    $result: append($result, $property);
  }
  @return $result;
}

@function trans-prefix($transition, $prefix: moz) {
  $prefixed: ();
  @each $trans in $transition {
    $prop-name: nth($trans, 1);
    $vendor-prop-name: prefix($prop-name, $prefix);
    $prop-vals: nth($trans, 2);
    $prefixed: append($prefixed, ($vendor-prop-name $prop-vals), comma);
  }

  @return $prefixed;
}

@mixin transition($values...) {
  $transitions: ();
  @each $declaration in $values {
    $prop: nth($declaration, 1);
    $prop-opts: ();
    $length: length($declaration);
    @for $i from 2 through $length {
      $prop-opts: append($prop-opts, nth($declaration, $i));
    }
    $trans: ($prop, $prop-opts);
    $transitions: append($transitions, $trans, comma);
  }

  -webkit-transition: trans-prefix($transitions, webkit);
  -moz-transition: trans-prefix($transitions, moz);
  -o-transition: trans-prefix($transitions, o);
  transition: $values;
}
